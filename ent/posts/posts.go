// Code generated by ent, DO NOT EDIT.

package posts

import (
	"time"
)

const (
	// Label holds the string label denoting the posts type in the database.
	Label = "posts"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldBody holds the string denoting the body field in the database.
	FieldBody = "body"
	// FieldTags holds the string denoting the tags field in the database.
	FieldTags = "tags"
	// FieldPublishAt holds the string denoting the publishat field in the database.
	FieldPublishAt = "publish_at"
	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"
	// Table holds the table name of the posts in the database.
	Table = "posts"
	// UserTable is the table that holds the user relation/edge.
	UserTable = "posts"
	// UserInverseTable is the table name for the Users entity.
	// It exists in this package in order to avoid circular dependency with the "users" package.
	UserInverseTable = "users"
	// UserColumn is the table column denoting the user relation/edge.
	UserColumn = "users_posts"
)

// Columns holds all SQL columns for posts fields.
var Columns = []string{
	FieldID,
	FieldTitle,
	FieldBody,
	FieldTags,
	FieldPublishAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "posts"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"users_posts",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultPublishAt holds the default value on creation for the "publishAt" field.
	DefaultPublishAt func() time.Time
)
